---
// src/components/Navbar.astro
import ThemeToggle from './ThemeToggle.astro'; // 导入主题切换组件

// 导航链接数据 (产品页链接暂时指向第一个产品，后续可以改为产品列表页)
const navLinks = [
  { href: "/", label: "Home" },
  { href: "/product/spotify-premium", label: "Products" }, // 示例链接，你可以改为 "/products" 指向一个产品列表页
  { href: "/about", label: "About Us" },
  { href: "/contact", label: "Contact Us" },
];
const siteTitle = "Jaideepas"; // 你的网站标题
const logoUrl = "/images/logo.svg"; // 你的Logo图片路径，请确保 public/images/logo.svg 存在
---
<header class="sticky top-0 z-50 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md shadow-sm dark:shadow-gray-700/50">
  {/* 
    sticky: 使导航栏在滚动时固定在顶部
    top-0: 固定在顶部
    z-50: 设置较高的z-index以确保在其他内容之上
    bg-white/80 dark:bg-gray-900/80: 背景色，带透明度，用于毛玻璃效果
    backdrop-blur-md: 应用背景模糊效果
    shadow-sm: 添加细微阴影
  */}
  <nav class="container mx-auto px-4 sm:px-6 lg:px-8" aria-label="Main navigation">
    {/* 
      container: 限制内容最大宽度并居中
      mx-auto: 水平居中
      px-*: 内边距
    */}
    <div class="flex items-center justify-between h-16 md:h-20">
      {/* Logo 和网站标题 */}
      <div class="flex items-center">
        <a href="/" class="flex-shrink-0 flex items-center group" aria-label="Go to homepage">
          <img class="h-8 w-auto md:h-10 group-hover:opacity-80 transition-opacity" src={logoUrl} alt={`${siteTitle} Logo`} />
          <span class="ml-2 md:ml-3 text-xl md:text-2xl font-bold text-gray-900 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
            {siteTitle}
          </span>
        </a>
      </div>

      {/* 桌面端导航链接 */}
      <div class="hidden md:flex items-center space-x-1 lg:space-x-2">
        {navLinks.map(link => {
          const isActive = Astro.url.pathname === link.href || 
                           (link.href.startsWith('/product') && Astro.url.pathname.startsWith('/product')) ||
                           (link.href === "/" && Astro.url.pathname.startsWith("/page/")); // 首页分页也算首页激活
          return (
            <a 
              href={link.href} 
              class:list={[
                "px-3 py-2 rounded-md text-sm lg:text-base font-medium transition-all duration-200 ease-in-out",
                "hover:bg-gray-100 dark:hover:bg-gray-800 hover:text-primary-600 dark:hover:text-primary-400",
                isActive 
                  ? "text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-gray-800/50" 
                  : "text-gray-700 dark:text-gray-300"
              ]}
              aria-current={isActive ? "page" : undefined}
            >
              {link.label}
            </a>
          );
        })}
        <div class="ml-2"> {/* 给主题切换按钮一些左边距 */}
          <ThemeToggle />
        </div>
      </div>

      {/* 移动端：主题切换按钮 和 汉堡菜单按钮 */}
      <div class="md:hidden flex items-center">
        <ThemeToggle />
        <button 
          id="mobile-menu-button" 
          type="button" 
          class="ml-2 inline-flex items-center justify-center p-2 rounded-md text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500" 
          aria-controls="mobile-menu" 
          aria-expanded="false"
          aria-label="Open main menu"
        >
          <span class="sr-only">Open main menu</span>
          {/* 汉堡图标 */}
          <svg class="block h-6 w-6" id="menu-icon-open" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
          {/* 关闭图标 (X), 默认隐藏 */}
          <svg class="hidden h-6 w-6" id="menu-icon-close" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </nav>

  {/* 移动端菜单内容, 默认隐藏 */}
  <div class="md:hidden hidden border-t border-gray-200 dark:border-gray-700" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      {navLinks.map(link => {
        const isActive = Astro.url.pathname === link.href || 
                         (link.href.startsWith('/product') && Astro.url.pathname.startsWith('/product')) ||
                         (link.href === "/" && Astro.url.pathname.startsWith("/page/"));
        return (
          <a 
            href={link.href} 
            class:list={[
              "block px-3 py-2 rounded-md text-base font-medium transition-colors duration-200",
              "hover:bg-gray-100 dark:hover:bg-gray-800 hover:text-primary-600 dark:hover:text-primary-400",
              isActive 
                ? "text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-gray-800/50" 
                : "text-gray-700 dark:text-gray-300"
            ]}
            aria-current={isActive ? "page" : undefined}
          >
            {link.label}
          </a>
        );
      })}
    </div>
  </div>
</header>

<script>
  // 移动端菜单切换逻辑
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIconOpen = document.getElementById('menu-icon-open');
  const menuIconClose = document.getElementById('menu-icon-close');

  if (mobileMenuButton && mobileMenu && menuIconOpen && menuIconClose) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true' || false;
      mobileMenuButton.setAttribute('aria-expanded', !isExpanded);
      mobileMenu.classList.toggle('hidden');
      menuIconOpen.classList.toggle('hidden'); // 切换打开图标的显示/隐藏
      menuIconClose.classList.toggle('hidden'); // 切换关闭图标的显示/隐藏
    });

    // 点击移动菜单中的链接后关闭菜单 (可选, 但推荐)
    mobileMenu.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        mobileMenuButton.setAttribute('aria-expanded', 'false');
        mobileMenu.classList.add('hidden');
        menuIconOpen.classList.remove('hidden');
        menuIconClose.classList.add('hidden');
      });
    });
  }
</script>
