---
// src/components/ThemeToggle.astro
// 这个组件是一个按钮，用于切换网站的明亮/暗黑主题。
// 它会包含两个SVG图标（月亮和太阳），并根据当前主题显示其中一个。
// 点击按钮时，它会更新localStorage中的主题设置，并切换HTML文档根元素的'dark'类。
---
<button id="theme-toggle" type="button" title="Toggle theme" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 transition-colors duration-200">
  {/* 暗黑模式图标 (月亮), 默认隐藏 */}
  <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
  {/* 明亮模式图标 (太阳), 默认隐藏 */}
  <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm-.707 10.607a1 1 0 010-1.414l.707-.707a1 1 0 111.414 1.414l-.707.707a1 1 0 01-1.414 0zM4 11a1 1 0 100-2H3a1 1 0 100 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
  </svg>
  <span class="sr-only">Toggle theme</span> {/* 为屏幕阅读器提供信息 */}
</button>

<script is:inline>
  // 获取DOM元素
  const themeToggleBtn = document.getElementById('theme-toggle');
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

  // 函数：应用主题并更新图标
  function applyThemeAndIcon() {
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      // 应用暗黑模式
      document.documentElement.classList.add('dark');
      if (themeToggleLightIcon) themeToggleLightIcon.classList.remove('hidden'); // 显示太阳图标
      if (themeToggleDarkIcon) themeToggleDarkIcon.classList.add('hidden');    // 隐藏月亮图标
    } else {
      // 应用明亮模式
      document.documentElement.classList.remove('dark');
      if (themeToggleDarkIcon) themeToggleDarkIcon.classList.remove('hidden'); // 显示月亮图标
      if (themeToggleLightIcon) themeToggleLightIcon.classList.add('hidden');   // 隐藏太阳图标
    }
  }

  // 页面加载时立即应用主题和图标
  applyThemeAndIcon();

  // 为按钮添加点击事件监听器
  if (themeToggleBtn) {
    themeToggleBtn.addEventListener('click', function() {
      // 切换localStorage中的主题设置
      const currentTheme = localStorage.getItem('color-theme');
      if (currentTheme) {
        if (currentTheme === 'light') {
          localStorage.setItem('color-theme', 'dark');
        } else {
          localStorage.setItem('color-theme', 'light');
        }
      } else {
        // 如果localStorage中没有设置，则根据当前实际主题的反向来设置
        if (document.documentElement.classList.contains('dark')) {
          localStorage.setItem('color-theme', 'light');
        } else {
          localStorage.setItem('color-theme', 'dark');
        }
      }
      // 重新应用主题和图标
      applyThemeAndIcon();
    });
  }

  // (可选) 监听系统颜色方案变化
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
    if (!localStorage.getItem('color-theme')) { // 仅当用户未手动设置主题时，才跟随系统变化
      applyThemeAndIcon();
    }
  });
</script>
